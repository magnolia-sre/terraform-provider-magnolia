/*
Subscription Service Endpoints

## Create subscription  Create a new subscription.  ``` curl -v -d '{\\     \"company\": \"My Company\", \\     \"firstName\": \"First\", \\     \"lastName\": \"Last\", \\     \"email\": \"first.last@magnolia-cms.com\", \\     \"password\": \"some1%2Tres\", \\     \"function\": \"CTO\", \\     \"country\": \"Spain\" \\     }' \\ -H \"Content-Type: application/json\" -X POST \"http://localhost:8080/public/subscriptions\" ``` ## Update subscription  Update a new subscription. This is an idempotent operation.  ``` curl -v -d '{\\     \"id\": \"my-company\" \\     }' \\ -H \"Content-Type: application/json\" -X POST \"http://localhost:8080/admin/subscriptions/{subId}\" ``` ## Invite users  Invite a list of users to a subscription.  ## Validate invitation  Validate an invitation to a subscription.  ## Activate user  Activate a user for a subscription. The user needs an invitation to be activated. 

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MetricDetails struct for MetricDetails
type MetricDetails struct {
	Source MetricSource `json:"source"`
	Endpoint *string `json:"endpoint,omitempty"`
	Path *string `json:"path,omitempty"`
	Key *string `json:"key,omitempty"`
}

// NewMetricDetails instantiates a new MetricDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricDetails(source MetricSource) *MetricDetails {
	this := MetricDetails{}
	this.Source = source
	return &this
}

// NewMetricDetailsWithDefaults instantiates a new MetricDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricDetailsWithDefaults() *MetricDetails {
	this := MetricDetails{}
	return &this
}

// GetSource returns the Source field value
func (o *MetricDetails) GetSource() MetricSource {
	if o == nil {
		var ret MetricSource
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *MetricDetails) GetSourceOk() (*MetricSource, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *MetricDetails) SetSource(v MetricSource) {
	o.Source = v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *MetricDetails) GetEndpoint() string {
	if o == nil || o.Endpoint == nil {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricDetails) GetEndpointOk() (*string, bool) {
	if o == nil || o.Endpoint == nil {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *MetricDetails) HasEndpoint() bool {
	if o != nil && o.Endpoint != nil {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *MetricDetails) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *MetricDetails) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricDetails) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *MetricDetails) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *MetricDetails) SetPath(v string) {
	o.Path = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *MetricDetails) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricDetails) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *MetricDetails) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *MetricDetails) SetKey(v string) {
	o.Key = &v
}

func (o MetricDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["source"] = o.Source
	}
	if o.Endpoint != nil {
		toSerialize["endpoint"] = o.Endpoint
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	return json.Marshal(toSerialize)
}

type NullableMetricDetails struct {
	value *MetricDetails
	isSet bool
}

func (v NullableMetricDetails) Get() *MetricDetails {
	return v.value
}

func (v *NullableMetricDetails) Set(val *MetricDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricDetails(val *MetricDetails) *NullableMetricDetails {
	return &NullableMetricDetails{value: val, isSet: true}
}

func (v NullableMetricDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


