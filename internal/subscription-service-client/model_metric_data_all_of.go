/*
Subscription Service Endpoints

## Create subscription  Create a new subscription.  ``` curl -v -d '{\\     \"company\": \"My Company\", \\     \"firstName\": \"First\", \\     \"lastName\": \"Last\", \\     \"email\": \"first.last@magnolia-cms.com\", \\     \"password\": \"some1%2Tres\", \\     \"function\": \"CTO\", \\     \"country\": \"Spain\" \\     }' \\ -H \"Content-Type: application/json\" -X POST \"http://localhost:8080/public/subscriptions\" ``` ## Update subscription  Update a new subscription. This is an idempotent operation.  ``` curl -v -d '{\\     \"id\": \"my-company\" \\     }' \\ -H \"Content-Type: application/json\" -X POST \"http://localhost:8080/admin/subscriptions/{subId}\" ``` ## Invite users  Invite a list of users to a subscription.  ## Validate invitation  Validate an invitation to a subscription.  ## Activate user  Activate a user for a subscription. The user needs an invitation to be activated. 

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MetricDataAllOf struct for MetricDataAllOf
type MetricDataAllOf struct {
	Value *float64 `json:"value,omitempty"`
}

// NewMetricDataAllOf instantiates a new MetricDataAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricDataAllOf() *MetricDataAllOf {
	this := MetricDataAllOf{}
	return &this
}

// NewMetricDataAllOfWithDefaults instantiates a new MetricDataAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricDataAllOfWithDefaults() *MetricDataAllOf {
	this := MetricDataAllOf{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *MetricDataAllOf) GetValue() float64 {
	if o == nil || o.Value == nil {
		var ret float64
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricDataAllOf) GetValueOk() (*float64, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *MetricDataAllOf) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given float64 and assigns it to the Value field.
func (o *MetricDataAllOf) SetValue(v float64) {
	o.Value = &v
}

func (o MetricDataAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableMetricDataAllOf struct {
	value *MetricDataAllOf
	isSet bool
}

func (v NullableMetricDataAllOf) Get() *MetricDataAllOf {
	return v.value
}

func (v *NullableMetricDataAllOf) Set(val *MetricDataAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricDataAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricDataAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricDataAllOf(val *MetricDataAllOf) *NullableMetricDataAllOf {
	return &NullableMetricDataAllOf{value: val, isSet: true}
}

func (v NullableMetricDataAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricDataAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


