/*
Subscription Service Endpoints

## Create subscription  Create a new subscription.  ``` curl -v -d '{\\     \"company\": \"My Company\", \\     \"firstName\": \"First\", \\     \"lastName\": \"Last\", \\     \"email\": \"first.last@magnolia-cms.com\", \\     \"password\": \"some1%2Tres\", \\     \"function\": \"CTO\", \\     \"country\": \"Spain\" \\     }' \\ -H \"Content-Type: application/json\" -X POST \"http://localhost:8080/public/subscriptions\" ``` ## Update subscription  Update a new subscription. This is an idempotent operation.  ``` curl -v -d '{\\     \"id\": \"my-company\" \\     }' \\ -H \"Content-Type: application/json\" -X POST \"http://localhost:8080/admin/subscriptions/{subId}\" ``` ## Invite users  Invite a list of users to a subscription.  ## Validate invitation  Validate an invitation to a subscription.  ## Activate user  Activate a user for a subscription. The user needs an invitation to be activated. 

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NewSubscriptionAllOf struct for NewSubscriptionAllOf
type NewSubscriptionAllOf struct {
	Company string `json:"company"`
	Password string `json:"password"`
	Country string `json:"country"`
	PlanId *string `json:"planId,omitempty"`
}

// NewNewSubscriptionAllOf instantiates a new NewSubscriptionAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewSubscriptionAllOf(company string, password string, country string) *NewSubscriptionAllOf {
	this := NewSubscriptionAllOf{}
	this.Company = company
	this.Password = password
	this.Country = country
	return &this
}

// NewNewSubscriptionAllOfWithDefaults instantiates a new NewSubscriptionAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewSubscriptionAllOfWithDefaults() *NewSubscriptionAllOf {
	this := NewSubscriptionAllOf{}
	return &this
}

// GetCompany returns the Company field value
func (o *NewSubscriptionAllOf) GetCompany() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Company
}

// GetCompanyOk returns a tuple with the Company field value
// and a boolean to check if the value has been set.
func (o *NewSubscriptionAllOf) GetCompanyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Company, true
}

// SetCompany sets field value
func (o *NewSubscriptionAllOf) SetCompany(v string) {
	o.Company = v
}

// GetPassword returns the Password field value
func (o *NewSubscriptionAllOf) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *NewSubscriptionAllOf) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *NewSubscriptionAllOf) SetPassword(v string) {
	o.Password = v
}

// GetCountry returns the Country field value
func (o *NewSubscriptionAllOf) GetCountry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Country
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
func (o *NewSubscriptionAllOf) GetCountryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Country, true
}

// SetCountry sets field value
func (o *NewSubscriptionAllOf) SetCountry(v string) {
	o.Country = v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *NewSubscriptionAllOf) GetPlanId() string {
	if o == nil || o.PlanId == nil {
		var ret string
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewSubscriptionAllOf) GetPlanIdOk() (*string, bool) {
	if o == nil || o.PlanId == nil {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *NewSubscriptionAllOf) HasPlanId() bool {
	if o != nil && o.PlanId != nil {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given string and assigns it to the PlanId field.
func (o *NewSubscriptionAllOf) SetPlanId(v string) {
	o.PlanId = &v
}

func (o NewSubscriptionAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["company"] = o.Company
	}
	if true {
		toSerialize["password"] = o.Password
	}
	if true {
		toSerialize["country"] = o.Country
	}
	if o.PlanId != nil {
		toSerialize["planId"] = o.PlanId
	}
	return json.Marshal(toSerialize)
}

type NullableNewSubscriptionAllOf struct {
	value *NewSubscriptionAllOf
	isSet bool
}

func (v NullableNewSubscriptionAllOf) Get() *NewSubscriptionAllOf {
	return v.value
}

func (v *NullableNewSubscriptionAllOf) Set(val *NewSubscriptionAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableNewSubscriptionAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableNewSubscriptionAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewSubscriptionAllOf(val *NewSubscriptionAllOf) *NullableNewSubscriptionAllOf {
	return &NullableNewSubscriptionAllOf{value: val, isSet: true}
}

func (v NullableNewSubscriptionAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewSubscriptionAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


