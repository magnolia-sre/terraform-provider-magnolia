/*
Subscription Service Endpoints

## Create subscription  Create a new subscription.  ``` curl -v -d '{\\     \"company\": \"My Company\", \\     \"firstName\": \"First\", \\     \"lastName\": \"Last\", \\     \"email\": \"first.last@magnolia-cms.com\", \\     \"password\": \"some1%2Tres\", \\     \"function\": \"CTO\", \\     \"country\": \"Spain\" \\     }' \\ -H \"Content-Type: application/json\" -X POST \"http://localhost:8080/public/subscriptions\" ``` ## Update subscription  Update a new subscription. This is an idempotent operation.  ``` curl -v -d '{\\     \"id\": \"my-company\" \\     }' \\ -H \"Content-Type: application/json\" -X POST \"http://localhost:8080/admin/subscriptions/{subId}\" ``` ## Invite users  Invite a list of users to a subscription.  ## Validate invitation  Validate an invitation to a subscription.  ## Activate user  Activate a user for a subscription. The user needs an invitation to be activated. 

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SubscriptionAllOfConfiguration struct for SubscriptionAllOfConfiguration
type SubscriptionAllOfConfiguration struct {
	IdentityProviderData *IdentityProviderData `json:"identityProviderData,omitempty"`
	GitConfigurationData *GitConfigurationData `json:"gitConfigurationData,omitempty"`
}

// NewSubscriptionAllOfConfiguration instantiates a new SubscriptionAllOfConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionAllOfConfiguration() *SubscriptionAllOfConfiguration {
	this := SubscriptionAllOfConfiguration{}
	return &this
}

// NewSubscriptionAllOfConfigurationWithDefaults instantiates a new SubscriptionAllOfConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionAllOfConfigurationWithDefaults() *SubscriptionAllOfConfiguration {
	this := SubscriptionAllOfConfiguration{}
	return &this
}

// GetIdentityProviderData returns the IdentityProviderData field value if set, zero value otherwise.
func (o *SubscriptionAllOfConfiguration) GetIdentityProviderData() IdentityProviderData {
	if o == nil || o.IdentityProviderData == nil {
		var ret IdentityProviderData
		return ret
	}
	return *o.IdentityProviderData
}

// GetIdentityProviderDataOk returns a tuple with the IdentityProviderData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionAllOfConfiguration) GetIdentityProviderDataOk() (*IdentityProviderData, bool) {
	if o == nil || o.IdentityProviderData == nil {
		return nil, false
	}
	return o.IdentityProviderData, true
}

// HasIdentityProviderData returns a boolean if a field has been set.
func (o *SubscriptionAllOfConfiguration) HasIdentityProviderData() bool {
	if o != nil && o.IdentityProviderData != nil {
		return true
	}

	return false
}

// SetIdentityProviderData gets a reference to the given IdentityProviderData and assigns it to the IdentityProviderData field.
func (o *SubscriptionAllOfConfiguration) SetIdentityProviderData(v IdentityProviderData) {
	o.IdentityProviderData = &v
}

// GetGitConfigurationData returns the GitConfigurationData field value if set, zero value otherwise.
func (o *SubscriptionAllOfConfiguration) GetGitConfigurationData() GitConfigurationData {
	if o == nil || o.GitConfigurationData == nil {
		var ret GitConfigurationData
		return ret
	}
	return *o.GitConfigurationData
}

// GetGitConfigurationDataOk returns a tuple with the GitConfigurationData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionAllOfConfiguration) GetGitConfigurationDataOk() (*GitConfigurationData, bool) {
	if o == nil || o.GitConfigurationData == nil {
		return nil, false
	}
	return o.GitConfigurationData, true
}

// HasGitConfigurationData returns a boolean if a field has been set.
func (o *SubscriptionAllOfConfiguration) HasGitConfigurationData() bool {
	if o != nil && o.GitConfigurationData != nil {
		return true
	}

	return false
}

// SetGitConfigurationData gets a reference to the given GitConfigurationData and assigns it to the GitConfigurationData field.
func (o *SubscriptionAllOfConfiguration) SetGitConfigurationData(v GitConfigurationData) {
	o.GitConfigurationData = &v
}

func (o SubscriptionAllOfConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IdentityProviderData != nil {
		toSerialize["identityProviderData"] = o.IdentityProviderData
	}
	if o.GitConfigurationData != nil {
		toSerialize["gitConfigurationData"] = o.GitConfigurationData
	}
	return json.Marshal(toSerialize)
}

type NullableSubscriptionAllOfConfiguration struct {
	value *SubscriptionAllOfConfiguration
	isSet bool
}

func (v NullableSubscriptionAllOfConfiguration) Get() *SubscriptionAllOfConfiguration {
	return v.value
}

func (v *NullableSubscriptionAllOfConfiguration) Set(val *SubscriptionAllOfConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionAllOfConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionAllOfConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionAllOfConfiguration(val *SubscriptionAllOfConfiguration) *NullableSubscriptionAllOfConfiguration {
	return &NullableSubscriptionAllOfConfiguration{value: val, isSet: true}
}

func (v NullableSubscriptionAllOfConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionAllOfConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


