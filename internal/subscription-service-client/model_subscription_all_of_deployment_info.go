/*
Subscription Service Endpoints

## Create subscription  Create a new subscription.  ``` curl -v -d '{\\     \"company\": \"My Company\", \\     \"firstName\": \"First\", \\     \"lastName\": \"Last\", \\     \"email\": \"first.last@magnolia-cms.com\", \\     \"password\": \"some1%2Tres\", \\     \"function\": \"CTO\", \\     \"country\": \"Spain\" \\     }' \\ -H \"Content-Type: application/json\" -X POST \"http://localhost:8080/public/subscriptions\" ``` ## Update subscription  Update a new subscription. This is an idempotent operation.  ``` curl -v -d '{\\     \"id\": \"my-company\" \\     }' \\ -H \"Content-Type: application/json\" -X POST \"http://localhost:8080/admin/subscriptions/{subId}\" ``` ## Invite users  Invite a list of users to a subscription.  ## Validate invitation  Validate an invitation to a subscription.  ## Activate user  Activate a user for a subscription. The user needs an invitation to be activated. 

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SubscriptionAllOfDeploymentInfo struct for SubscriptionAllOfDeploymentInfo
type SubscriptionAllOfDeploymentInfo struct {
	Version *int32 `json:"version,omitempty"`
	LastUpdate *string `json:"lastUpdate,omitempty"`
}

// NewSubscriptionAllOfDeploymentInfo instantiates a new SubscriptionAllOfDeploymentInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionAllOfDeploymentInfo() *SubscriptionAllOfDeploymentInfo {
	this := SubscriptionAllOfDeploymentInfo{}
	return &this
}

// NewSubscriptionAllOfDeploymentInfoWithDefaults instantiates a new SubscriptionAllOfDeploymentInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionAllOfDeploymentInfoWithDefaults() *SubscriptionAllOfDeploymentInfo {
	this := SubscriptionAllOfDeploymentInfo{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *SubscriptionAllOfDeploymentInfo) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionAllOfDeploymentInfo) GetVersionOk() (*int32, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *SubscriptionAllOfDeploymentInfo) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *SubscriptionAllOfDeploymentInfo) SetVersion(v int32) {
	o.Version = &v
}

// GetLastUpdate returns the LastUpdate field value if set, zero value otherwise.
func (o *SubscriptionAllOfDeploymentInfo) GetLastUpdate() string {
	if o == nil || o.LastUpdate == nil {
		var ret string
		return ret
	}
	return *o.LastUpdate
}

// GetLastUpdateOk returns a tuple with the LastUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionAllOfDeploymentInfo) GetLastUpdateOk() (*string, bool) {
	if o == nil || o.LastUpdate == nil {
		return nil, false
	}
	return o.LastUpdate, true
}

// HasLastUpdate returns a boolean if a field has been set.
func (o *SubscriptionAllOfDeploymentInfo) HasLastUpdate() bool {
	if o != nil && o.LastUpdate != nil {
		return true
	}

	return false
}

// SetLastUpdate gets a reference to the given string and assigns it to the LastUpdate field.
func (o *SubscriptionAllOfDeploymentInfo) SetLastUpdate(v string) {
	o.LastUpdate = &v
}

func (o SubscriptionAllOfDeploymentInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.LastUpdate != nil {
		toSerialize["lastUpdate"] = o.LastUpdate
	}
	return json.Marshal(toSerialize)
}

type NullableSubscriptionAllOfDeploymentInfo struct {
	value *SubscriptionAllOfDeploymentInfo
	isSet bool
}

func (v NullableSubscriptionAllOfDeploymentInfo) Get() *SubscriptionAllOfDeploymentInfo {
	return v.value
}

func (v *NullableSubscriptionAllOfDeploymentInfo) Set(val *SubscriptionAllOfDeploymentInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionAllOfDeploymentInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionAllOfDeploymentInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionAllOfDeploymentInfo(val *SubscriptionAllOfDeploymentInfo) *NullableSubscriptionAllOfDeploymentInfo {
	return &NullableSubscriptionAllOfDeploymentInfo{value: val, isSet: true}
}

func (v NullableSubscriptionAllOfDeploymentInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionAllOfDeploymentInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


