/*
Subscription Service Endpoints

## Create subscription  Create a new subscription.  ``` curl -v -d '{\\     \"company\": \"My Company\", \\     \"firstName\": \"First\", \\     \"lastName\": \"Last\", \\     \"email\": \"first.last@magnolia-cms.com\", \\     \"password\": \"some1%2Tres\", \\     \"function\": \"CTO\", \\     \"country\": \"Spain\" \\     }' \\ -H \"Content-Type: application/json\" -X POST \"http://localhost:8080/public/subscriptions\" ``` ## Update subscription  Update a new subscription. This is an idempotent operation.  ``` curl -v -d '{\\     \"id\": \"my-company\" \\     }' \\ -H \"Content-Type: application/json\" -X POST \"http://localhost:8080/admin/subscriptions/{subId}\" ``` ## Invite users  Invite a list of users to a subscription.  ## Validate invitation  Validate an invitation to a subscription.  ## Activate user  Activate a user for a subscription. The user needs an invitation to be activated. 

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Subscription struct for Subscription
type Subscription struct {
	FirstName string `json:"firstName"`
	LastName string `json:"lastName"`
	Email string `json:"email"`
	Function string `json:"function"`
	Id string `json:"id"`
	Company string `json:"company"`
	Creation *string `json:"creation,omitempty"`
	Country string `json:"country"`
	Type string `json:"type"`
	Alias *string `json:"alias,omitempty"`
	PlanId *string `json:"planId,omitempty"`
	Provisioned *bool `json:"provisioned,omitempty"`
	Status *SubscriptionStatus `json:"status,omitempty"`
	DeploymentInfo *SubscriptionAllOfDeploymentInfo `json:"deploymentInfo,omitempty"`
	Configuration *SubscriptionAllOfConfiguration `json:"configuration,omitempty"`
	ErrorCause *SubscriptionErrorCause `json:"errorCause,omitempty"`
}

// NewSubscription instantiates a new Subscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscription(firstName string, lastName string, email string, function string, id string, company string, country string, type_ string) *Subscription {
	this := Subscription{}
	this.FirstName = firstName
	this.LastName = lastName
	this.Email = email
	this.Function = function
	this.Id = id
	this.Company = company
	this.Country = country
	this.Type = type_
	return &this
}

// NewSubscriptionWithDefaults instantiates a new Subscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionWithDefaults() *Subscription {
	this := Subscription{}
	return &this
}

// GetFirstName returns the FirstName field value
func (o *Subscription) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *Subscription) GetFirstNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *Subscription) SetFirstName(v string) {
	o.FirstName = v
}

// GetLastName returns the LastName field value
func (o *Subscription) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *Subscription) GetLastNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *Subscription) SetLastName(v string) {
	o.LastName = v
}

// GetEmail returns the Email field value
func (o *Subscription) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *Subscription) GetEmailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *Subscription) SetEmail(v string) {
	o.Email = v
}

// GetFunction returns the Function field value
func (o *Subscription) GetFunction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Function
}

// GetFunctionOk returns a tuple with the Function field value
// and a boolean to check if the value has been set.
func (o *Subscription) GetFunctionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Function, true
}

// SetFunction sets field value
func (o *Subscription) SetFunction(v string) {
	o.Function = v
}

// GetId returns the Id field value
func (o *Subscription) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Subscription) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Subscription) SetId(v string) {
	o.Id = v
}

// GetCompany returns the Company field value
func (o *Subscription) GetCompany() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Company
}

// GetCompanyOk returns a tuple with the Company field value
// and a boolean to check if the value has been set.
func (o *Subscription) GetCompanyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Company, true
}

// SetCompany sets field value
func (o *Subscription) SetCompany(v string) {
	o.Company = v
}

// GetCreation returns the Creation field value if set, zero value otherwise.
func (o *Subscription) GetCreation() string {
	if o == nil || o.Creation == nil {
		var ret string
		return ret
	}
	return *o.Creation
}

// GetCreationOk returns a tuple with the Creation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCreationOk() (*string, bool) {
	if o == nil || o.Creation == nil {
		return nil, false
	}
	return o.Creation, true
}

// HasCreation returns a boolean if a field has been set.
func (o *Subscription) HasCreation() bool {
	if o != nil && o.Creation != nil {
		return true
	}

	return false
}

// SetCreation gets a reference to the given string and assigns it to the Creation field.
func (o *Subscription) SetCreation(v string) {
	o.Creation = &v
}

// GetCountry returns the Country field value
func (o *Subscription) GetCountry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Country
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
func (o *Subscription) GetCountryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Country, true
}

// SetCountry sets field value
func (o *Subscription) SetCountry(v string) {
	o.Country = v
}

// GetType returns the Type field value
func (o *Subscription) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Subscription) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Subscription) SetType(v string) {
	o.Type = v
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *Subscription) GetAlias() string {
	if o == nil || o.Alias == nil {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetAliasOk() (*string, bool) {
	if o == nil || o.Alias == nil {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *Subscription) HasAlias() bool {
	if o != nil && o.Alias != nil {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *Subscription) SetAlias(v string) {
	o.Alias = &v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *Subscription) GetPlanId() string {
	if o == nil || o.PlanId == nil {
		var ret string
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetPlanIdOk() (*string, bool) {
	if o == nil || o.PlanId == nil {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *Subscription) HasPlanId() bool {
	if o != nil && o.PlanId != nil {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given string and assigns it to the PlanId field.
func (o *Subscription) SetPlanId(v string) {
	o.PlanId = &v
}

// GetProvisioned returns the Provisioned field value if set, zero value otherwise.
func (o *Subscription) GetProvisioned() bool {
	if o == nil || o.Provisioned == nil {
		var ret bool
		return ret
	}
	return *o.Provisioned
}

// GetProvisionedOk returns a tuple with the Provisioned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetProvisionedOk() (*bool, bool) {
	if o == nil || o.Provisioned == nil {
		return nil, false
	}
	return o.Provisioned, true
}

// HasProvisioned returns a boolean if a field has been set.
func (o *Subscription) HasProvisioned() bool {
	if o != nil && o.Provisioned != nil {
		return true
	}

	return false
}

// SetProvisioned gets a reference to the given bool and assigns it to the Provisioned field.
func (o *Subscription) SetProvisioned(v bool) {
	o.Provisioned = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Subscription) GetStatus() SubscriptionStatus {
	if o == nil || o.Status == nil {
		var ret SubscriptionStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetStatusOk() (*SubscriptionStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Subscription) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given SubscriptionStatus and assigns it to the Status field.
func (o *Subscription) SetStatus(v SubscriptionStatus) {
	o.Status = &v
}

// GetDeploymentInfo returns the DeploymentInfo field value if set, zero value otherwise.
func (o *Subscription) GetDeploymentInfo() SubscriptionAllOfDeploymentInfo {
	if o == nil || o.DeploymentInfo == nil {
		var ret SubscriptionAllOfDeploymentInfo
		return ret
	}
	return *o.DeploymentInfo
}

// GetDeploymentInfoOk returns a tuple with the DeploymentInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetDeploymentInfoOk() (*SubscriptionAllOfDeploymentInfo, bool) {
	if o == nil || o.DeploymentInfo == nil {
		return nil, false
	}
	return o.DeploymentInfo, true
}

// HasDeploymentInfo returns a boolean if a field has been set.
func (o *Subscription) HasDeploymentInfo() bool {
	if o != nil && o.DeploymentInfo != nil {
		return true
	}

	return false
}

// SetDeploymentInfo gets a reference to the given SubscriptionAllOfDeploymentInfo and assigns it to the DeploymentInfo field.
func (o *Subscription) SetDeploymentInfo(v SubscriptionAllOfDeploymentInfo) {
	o.DeploymentInfo = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *Subscription) GetConfiguration() SubscriptionAllOfConfiguration {
	if o == nil || o.Configuration == nil {
		var ret SubscriptionAllOfConfiguration
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetConfigurationOk() (*SubscriptionAllOfConfiguration, bool) {
	if o == nil || o.Configuration == nil {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *Subscription) HasConfiguration() bool {
	if o != nil && o.Configuration != nil {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given SubscriptionAllOfConfiguration and assigns it to the Configuration field.
func (o *Subscription) SetConfiguration(v SubscriptionAllOfConfiguration) {
	o.Configuration = &v
}

// GetErrorCause returns the ErrorCause field value if set, zero value otherwise.
func (o *Subscription) GetErrorCause() SubscriptionErrorCause {
	if o == nil || o.ErrorCause == nil {
		var ret SubscriptionErrorCause
		return ret
	}
	return *o.ErrorCause
}

// GetErrorCauseOk returns a tuple with the ErrorCause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetErrorCauseOk() (*SubscriptionErrorCause, bool) {
	if o == nil || o.ErrorCause == nil {
		return nil, false
	}
	return o.ErrorCause, true
}

// HasErrorCause returns a boolean if a field has been set.
func (o *Subscription) HasErrorCause() bool {
	if o != nil && o.ErrorCause != nil {
		return true
	}

	return false
}

// SetErrorCause gets a reference to the given SubscriptionErrorCause and assigns it to the ErrorCause field.
func (o *Subscription) SetErrorCause(v SubscriptionErrorCause) {
	o.ErrorCause = &v
}

func (o Subscription) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["firstName"] = o.FirstName
	}
	if true {
		toSerialize["lastName"] = o.LastName
	}
	if true {
		toSerialize["email"] = o.Email
	}
	if true {
		toSerialize["function"] = o.Function
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["company"] = o.Company
	}
	if o.Creation != nil {
		toSerialize["creation"] = o.Creation
	}
	if true {
		toSerialize["country"] = o.Country
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.Alias != nil {
		toSerialize["alias"] = o.Alias
	}
	if o.PlanId != nil {
		toSerialize["planId"] = o.PlanId
	}
	if o.Provisioned != nil {
		toSerialize["provisioned"] = o.Provisioned
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.DeploymentInfo != nil {
		toSerialize["deploymentInfo"] = o.DeploymentInfo
	}
	if o.Configuration != nil {
		toSerialize["configuration"] = o.Configuration
	}
	if o.ErrorCause != nil {
		toSerialize["errorCause"] = o.ErrorCause
	}
	return json.Marshal(toSerialize)
}

type NullableSubscription struct {
	value *Subscription
	isSet bool
}

func (v NullableSubscription) Get() *Subscription {
	return v.value
}

func (v *NullableSubscription) Set(val *Subscription) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscription(val *Subscription) *NullableSubscription {
	return &NullableSubscription{value: val, isSet: true}
}

func (v NullableSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


